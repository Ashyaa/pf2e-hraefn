{"name":"Wild Fire Surge","type":"script","scope":"global","author":"xOdDnnmVO5ECXCHC","img":"icons/magic/fire/elemental-fire-humanoid.webp","command":"const tokenActorsAndDefaultCharacter = () => {\n    const defaultUserActor = game.user.character;\n    if (!defaultUserActor) {\n        ui.notifications.warn('You need to have a default character for this macro to work.')\n        return []\n    }\n    const tokens = canvas.tokens.placeables.filter(t => t.actor.id === defaultUserActor.id);\n    let actors = tokens.map(({ actor }) => actor);\n    actors.push(defaultUserActor);\n    return actors;\n}\n\nconst toggleEffect = async (counter) => {\n    const actors = tokenActorsAndDefaultCharacter()\n    const ITEM_UUID = 'Compendium.pf2e-hraefn.hraefn-effects.EGNHCUyCfPFUa1F9'; // Surge Counter\n    const source = (await fromUuid(ITEM_UUID)).toObject();\n    source.flags.core ??= {};\n    source.flags.core.sourceId = ITEM_UUID;\n    source.system.badge.value = counter;\n    for await (const actor of actors) {\n        const existing = actor.itemTypes.effect.find((effect) => effect.getFlag('core', 'sourceId') === ITEM_UUID);\n        if (existing) {\n            await existing.delete();\n        }\n        if (counter > 0) {\n            await actor.createEmbeddedDocuments('Item', [source]);\n        }\n    }\n}\n\nactors = tokenActorsAndDefaultCharacter()\nif (actors.length === 0) {\n    return\n}\n\nlet counter = 0;\n// always use counter value of the default actorn, which is the last item in the array\nconst index = actors.at(-1).itemTypes.effect.findIndex(item => item.name === \"Surge Counter\");\nif (index > -1) {\n    const effect = actors.at(-1).itemTypes.effect[index];\n    counter = effect.system.badge.value;\n}\n\nlet r = new Roll(\"1d50\");\nawait r.roll({ async: true });\n\nlet failure = false;\nlet flavor = `\n      <strong>Wild Fire Surge</strong></br>\n      Target: Self (DC ${counter})</br>\n      Result: `;\nif (r.result <= counter) {\n    flavor += `<a style=\"color: rgb(247, 59, 59);\">Failure</a> by ${r.result - counter}`;\n    failure = true;\n} else {\n    flavor += `<a style=\"color: #91a82a;\">Success</a> by +${r.result - counter}`;\n}\nflavor += `</br><hr>\n      <section class=\"roll-note\">\n      <p><strong>Success</strong> The creature's surge counter increases to @UUID[Compendium.pf2e-hraefn.hraefn-effects.EGNHCUyCfPFUa1F9]{Surge Counter ${counter + 1}}.</br></p>\n      <p><strong>Failure</strong> The creature's surge counter resets to 0, and the creature rolls a wildfire effect.</br></p>\n      </section>`\nr.toMessage({\n    user: game.user.id,\n    flavor: flavor,\n    speaker: ChatMessage.getSpeaker(),\n});\nif (failure) {\n    const rollTablePack = game.packs.get(\"pf2e-hraefn.hraefn-rollable-tables\");\n    rollTablePack.getIndex();\n    rollTableID = rollTablePack.index.find(t => t.name === 'Wild Fire Surge')._id;\n    rollTablePack.getDocument(rollTableID).then(table => table.draw());\n    toggleEffect(0); // remove counter\n} else {\n    toggleEffect(counter + 1); // add updated counter\n}","flags":{"advanced-macros":{"runAsGM":false,"runForSpecificUser":""},"core":{"sourceId":"Macro.edGvKJPIDzqbzWJw"}},"_stats":{"systemId":"pf2e","systemVersion":"4.11.2","coreVersion":"10.291","createdTime":1683828603049,"modifiedTime":1684172918388,"lastModifiedBy":"xOdDnnmVO5ECXCHC"},"ownership":{"default":0,"xOdDnnmVO5ECXCHC":3},"folder":null,"sort":0,"_id":"Ow0Ml0cV95UjP5Mm"}
